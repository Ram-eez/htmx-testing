package components 

import "HTMX/models"
import "time"


templ CountryNames(countries []models.Country) {
    <div>
        <ul>
        for _, country := range countries{
            
            <li>The Country is { country.Name }</li>
        }
        </ul>
    </div>

}

templ Button_eg(text string) {
    <div>
    <button value="click me">{ text }</button>
    </div>
}

templ TimeComponent(t time.Time) {
    <div>{ t.String() }</div>
}
// This is called prop drilling used to pass data from component to component, but its a bad practice 
// Code becomes hard to refactor or touch 
// Use with only 1-2 levels deep components
templ Top(name string) {
    <div>
        @Middle(name)
    </div>
}

templ Middle(name string) {
    <ul>
        @Bottom(name)
    </ul>
}

templ Bottom(name string) {
    <li>
        {name + " " +"works out"}
    </li>
}

templ ThemeName() {
    <div>
        Theme : {ctx.Value(models.ThemeContextKey).(string)}
    </div>
}


type CountryWrapper struct {
    models.Country
}

templ (c CountryWrapper) CountryMethod() {
    <div>
        Country: {c.Name}, States: {c.States}, Population: {c.Population}
    </div>
}

templ Message(country string, states int64, population int64) {
    <div>
        @CountryWrapper{
            Country: models.Country{
                Name: country,
                States: states,
                Population: population,
            },
        }.CountryMethod()
    </div>
}

templ CountryListComponent(model models.CountryListViewModel) {
    <div>
    if model.ErrorMessage != nil {
        <div class="error">{model.ErrorMessage.Error()}</div>
    } else {
        <ul>
            for _, country := range model.Countries {
                 <li>{country.Name}</li>
            }
        </ul>
    }
    </div>
}

// we can put many components into a single one and render it at once
templ Page(t time.Time,countries []models.Country) {
    @Button_eg("india")
    @CountryNames(countries)
    @TimeComponent(t)
    @TimeComponent(t)
} 